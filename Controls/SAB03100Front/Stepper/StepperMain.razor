@using R_BlazorFrontEnd.Controls.Controls.Stepper
@using R_BlazorFrontEnd.Controls.DataControls
@inherits R_Page

<R_Label>R_FormAccess: @(this.R_FormAccess.Length)</R_Label>
<R_Label>FormAccess: @(this.FormAccess.Length)</R_Label>
@if (_conductorRef is not null)
{
    <R_Label>Conductor Access: @(_conductorRef.R_Access.Length)</R_Label>
}

<R_Stepper @ref="@Stepper"
OnFinish="@OnFinish" 
UseDefaultButton="false">
    <R_Step Label="Unit Info">
        <R_StepPage R_Before_Open_StepPage="@R_Before_Open_StepPage1"/>

        <R_StackLayout Row>
            <R_Button>Cancel</R_Button>
            <R_Button OnClick="@OnClickNext">Next</R_Button>
        </R_StackLayout>
    </R_Step>

    <R_Step Label="Billing Rule">
        <R_StepPage R_Before_Open_StepPage="@R_Before_Open_StepPage2" />

        <R_StackLayout Row>
            <R_Button OnClick="@OnClickBack" @ref="@buttonRef">Back</R_Button>
            <R_Button>Cancel</R_Button>
            <R_Button OnClick="@OnClickNext">Next</R_Button>
        </R_StackLayout>
    </R_Step>

    <R_Step Label="Billing Schedule">
        <R_StepPage R_Before_Open_StepPage="@R_Before_Open_StepPage3" />

        <R_StackLayout Row>
            <R_Button OnClick="@OnClickBack">Back</R_Button>
            <R_Button>Cancel</R_Button>
            <R_Button OnClick="@OnClickNext">Next</R_Button>
        </R_StackLayout>
    </R_Step>

    <R_Step Label="Document">
        <R_StepPage R_Before_Open_StepPage="@R_Before_Open_StepPage4" />

        <R_StackLayout Row>
            <R_Button OnClick="@OnClickBack">Back</R_Button>
            <R_Button OnClick="@OnClickDone">Done</R_Button>
        </R_StackLayout>
    </R_Step>
</R_Stepper>

<R_AddButton R_Conductor="@_conductorRef"/>
<R_EditButton R_Conductor="@_conductorRef"/>

<R_Popup R_Before_Open_Popup="@R_Before_Open_Popup">View</R_Popup>
<R_Conductor @ref="@_conductorRef"
R_ViewModel="@_viewModel"
R_IsHeader />

@code {
    private int Value { get; set; }
    private R_Stepper Stepper;
    private R_Button buttonRef;

    private R_Conductor _conductorRef;
    private SAB03100ViewModel _viewModel = new();


    // protected override async Task R_Init_From_Master(object poParameter)
    // {
    //     await _conductorRef.Add();
    // }

    private void OnStepChange(R_StepChangeEventArgs eventArgs)
    {
        // if (eventArgs.TargetIndex == 2)
        //     eventArgs.IsCancelled = true;
    }

    private void OnFinish()
    {

    }

    private async Task OnClickNext()
    {
        await Stepper.NextAsync();
    }

    private async Task OnClickBack()
    {
        await Stepper.BackAsync();
    }

    private async Task OnClickDone()
    {
        await Stepper.FinishAsync();
    }

    private void R_Before_Open_Popup(R_BeforeOpenPopupEventArgs eventArgs)
    {
        eventArgs.PageTitle = "test";
        eventArgs.TargetPageType = typeof(StepperMain);
    }

    private void R_Before_Open_StepPage1(R_BeforeOpenStepPageEventArgs eventArgs)
    {
        eventArgs.Parameter = _viewModel;
        eventArgs.TargetPageType = typeof(StepPage1);
    }

    private void R_Before_Open_StepPage2(R_BeforeOpenStepPageEventArgs eventArgs)
    {
        eventArgs.Parameter = _viewModel;
        eventArgs.TargetPageType = typeof(StepPage2);
    }

    private void R_Before_Open_StepPage3(R_BeforeOpenStepPageEventArgs eventArgs)
    {
        eventArgs.Parameter = _viewModel;
        eventArgs.TargetPageType = typeof(StepPage3);
    }

    private void R_Before_Open_StepPage4(R_BeforeOpenStepPageEventArgs eventArgs)
    {
        eventArgs.Parameter = _viewModel;
        eventArgs.TargetPageType = typeof(StepPage4);
    }
}
