@using R_BlazorFrontEnd.Controls.DataControls
@inherits R_Page
@attribute [R_Page (Title = "Tab Page Example")]

<h3>Tab Page Example</h3>

<R_TabStrip @ref="@tabStripRef">
    <R_TabStripTab Title="Tab 1">
        @lcText

        <R_Button OnClick="@OnClick">Set Active Tab 2</R_Button>
    </R_TabStripTab>

    <R_TabStripTab Title="Tab 2" Id="tab2">
        <R_TabPage R_Before_Open_TabPage="@R_Before_Open_TabPageTabB" 
                   R_After_Open_TabPage="@R_After_Open_TabPageTab" />
    </R_TabStripTab>

    <R_TabStripTab Title="Tab 3" Id="tab3">
        <R_TabPage R_Before_Open_TabPage="@R_Before_Open_TabPageTabC"
                   R_After_Open_TabPage="@R_After_Open_TabPageTab" />
    </R_TabStripTab>
</R_TabStrip>


<R_AddButton R_Conductor="@_conductorRef" />
<R_EditButton R_Conductor="@_conductorRef" />
<R_DeleteButton R_Conductor="@_conductorRef" />
<R_SaveButton R_Conductor="@_conductorRef" />
<R_CancelButton R_Conductor="@_conductorRef" />
<R_PrintButton R_Conductor="@_conductorRef" />

<R_Conductor @ref="@_conductorRef" R_IsHeader R_ViewModel="@sAB03000ViewModel" R_ServiceGetRecord="@GetRecord" R_Display="@R_Display" />
@code {
    private R_TabStrip tabStripRef;
    private string lcText = "Tab 1";

    private R_Conductor _conductorRef;
    private SAB03000ViewModel sAB03000ViewModel = new SAB03000ViewModel();

    protected override async Task R_Init_From_Master(object poParameter)
    {
        await _conductorRef.R_GetEntity(null);
        await base.R_Init_From_Master(poParameter);
    }

    private void R_Before_Open_TabPageTabB(R_BeforeOpenTabPageEventArgs eventArgs)
    {
        eventArgs.TargetPageType = typeof(PageB);
        eventArgs.Parameter = "Parameter untuk page B";
    }

    private void R_Before_Open_TabPageTabC(R_BeforeOpenTabPageEventArgs eventArgs)
    {
        eventArgs.TargetPageType = typeof(PageC);
        eventArgs.Parameter = "Parameter untuk page C";
    }

    private void R_After_Open_TabPageTab(R_AfterOpenTabPageEventArgs eventArgs)
    {
        lcText = (string)eventArgs.Result;
    }

    private async Task OnClick()
    {
        await tabStripRef.SetActiveTabAsync("tab2");
    }

    private void GetRecord(R_ServiceGetRecordEventArgs eventArgs)
    {
        sAB03000ViewModel.GetData();
        eventArgs.Result = sAB03000ViewModel.dto;
    }

    private void R_Display (R_DisplayEventArgs eventArgs)
    {
        
    }
}
