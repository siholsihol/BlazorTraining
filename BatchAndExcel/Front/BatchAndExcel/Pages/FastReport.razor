@page "/fastreport"
@using R_CommonFrontBackAPI
@using Newtonsoft.Json
@using System.Web

<div class="row">
    <div class="col-2">
        <R_NumericTextBox @bind-Value="@_countProduct"></R_NumericTextBox>
    </div>
    <div class="col-2">
        <R_Button OnClick="@GenerateReport">Generate Report</R_Button>
    </div>
</div>

@code {
    [Inject] private IJSRuntime _jsRuntime { get; set; }

    private int _countProduct = 0;

    private async Task GenerateReport()
    {
        try
        {
            var loHttpClient = R_HTTPClient.R_GetInstanceWithName("DEFAULT");

            var loParam = new ProductParameterDTO()
            {
                GenerateCountProduct = _countProduct
            };

            var loDownload = await loHttpClient.R_APIRequestObject<R_DownloadFileResultDTO>(
                "api/Product/AllProductPost",
                R_HTTPClient.E_APIMethod.POST_MODE,
                pcBody: JsonConvert.SerializeObject(loParam),
                plSendWithContext: false);

            if (loDownload is not null && !string.IsNullOrWhiteSpace(loDownload.GuidResult))
            {
                var loQuery = new Dictionary<string, string>()
                {
                    { "pcGuid", loDownload.GuidResult }
                };

                var lcBaseUrl = loHttpClient.R_GetHttpClient().BaseAddress.ToString();
                var lcUrl = ConvertToQueryString(lcBaseUrl + "api/Product/AllStreamProductGet", loQuery);
                await NavigateToNewTab(lcUrl);
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }

    public async Task NavigateToNewTab(string pcUrl)
    {
        await _jsRuntime.InvokeAsync<object>("open", pcUrl, "_blank");
    }

    private string ConvertToQueryString(string url, Dictionary<string, string> poQueryString)
    {
        var loQuery = HttpUtility.ParseQueryString("");

        poQueryString.ToList().ForEach(x => loQuery[x.Key.Trim()] = x.Value);

        return string.Format("{0}?{1}", url, loQuery.ToString());
    }
}
